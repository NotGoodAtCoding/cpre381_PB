DEPTH=16384; 	% Memory depth and width are required 
		% DEPTH is the number of addresses 
WIDTH = 32; 	% WIDTH is the number of bits of data per word
		% DEPTH and WIDTH should be entered as decimal numbers

ADDRESS_RADIX = DEC; 	% Address and value radixes are required
DATA_RADIX = HEX; 	% Enter BIN, DEC, HEX, OCT, or UNS; unless
			% otherwise specified, radixes = HEX

-- Specify values for addresses, which can be single address or range
-- SOME THINGS TO CONSIDER
-- 1) This memory is word-addressable, versus the MIPS conceptual byte-addressable memory.
--    This means that address 1 corresponds to word 1, address 2 corresponds to word 2, etc.
--    Since MIPS will be generating byte addresses, you will have to create some (very simple)
--    logic in your VHDL wrapper to deal with byte/word offsets. 
-- 2) The "single address" notation seems to be least likely to cause confusion so that is what
--    I recommend. 
-- 3) The values need to be in 32-bit hex form (i.e. don't use F when you really mean 0000000F).

CONTENT
BEGIN

--0 : 00000001;
--1 : 00000002;
--6 : 00000007 ffffFFF8 00000009 FFFFFFF6;

--[10..48] : ffFFffFF; 			
-- 1, 2, -3, 4, -5, 6, -7, 8, -9, 10

1000 : 00000001 00000002 00000004 00000003 00000005 00000007 00000006 00000008 00000009 00000000 0000000c 0000000d 0000000e 0000000f 0000000c 00000010 00000011 0000000f 00000012 00000010 00000011

;
