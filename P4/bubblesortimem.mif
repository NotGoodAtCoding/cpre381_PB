DEPTH=1024; 	% Memory depth and width are required 
		% DEPTH is the number of addresses 
WIDTH = 32; 	% WIDTH is the number of bits of data per word
		% DEPTH and WIDTH should be entered as decimal numbers

ADDRESS_RADIX = DEC; 	% Address and value radixes are required
DATA_RADIX = HEX; 	% Enter BIN, DEC, HEX, OCT, or UNS; unless
			% otherwise specified, radixes = HEX

-- Specify values for addresses, which can be single address or range
-- SOME THINGS TO CONSIDER
-- 1) This memory is word-addressable, versus the MIPS conceptual byte-addressable memory.
--    This means that address 1 corresponds to word 1, address 2 corresponds to word 2, etc.
--    Since MIPS will be generating byte addresses, you will have to create some (very simple)
--    logic in your VHDL wrapper to deal with byte/word offsets. 
-- 2) The "single address" notation seems to be least likely to cause confusion so that is what
--    I recommend. 
-- 3) The values need to be in 32-bit hex form (i.e. don't use F when you really mean 0000000F).

CONTENT
BEGIN

0: 00111100000000010001000000000001
10001100001100110000000000000000
00100010011100111111111111111111
00000000000100110000100000101010
00010000001000000000000000010111
00100100000100000000000000000000
00100100000100010000000000000000
00000010000100110000100000101010
00010000001000000000000000010001
00111100000000010001000000000001
00000000001100010000100000100001
10001100001011110000000000000100
00111100000000010001000000000001
00000000001100010000100000100001
10001100001110000000000000001000
00000011000011110000100000101010
00010000001000000000000000000110
00111100000000010001000000000001
00000000001100010000100000100001
10101100001110000000000000000100
00111100000000010001000000000001
00000000001100010000100000100001
10101100001011110000000000001000
00100010001100010000000000000100
00100010000100000000000000000001
00001000000100000000000000000111
00100010011100111111111111111111
00001000000100000000000000000011;
	

END;
